// Generated by view binder compiler. Do not edit!
package com.malas.appsr.malasapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.malas.appsr.malasapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoginScreenBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView btnLogin;

  @NonNull
  public final ImageView btnRegister;

  @NonNull
  public final EditText edtPassword;

  @NonNull
  public final EditText edtUserName;

  @NonNull
  public final TextInputLayout passwordInput;

  @NonNull
  public final TextView tvForgetPassword;

  private LoginScreenBinding(@NonNull RelativeLayout rootView, @NonNull ImageView btnLogin,
      @NonNull ImageView btnRegister, @NonNull EditText edtPassword, @NonNull EditText edtUserName,
      @NonNull TextInputLayout passwordInput, @NonNull TextView tvForgetPassword) {
    this.rootView = rootView;
    this.btnLogin = btnLogin;
    this.btnRegister = btnRegister;
    this.edtPassword = edtPassword;
    this.edtUserName = edtUserName;
    this.passwordInput = passwordInput;
    this.tvForgetPassword = tvForgetPassword;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.login_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_login;
      ImageView btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.btn_register;
      ImageView btnRegister = ViewBindings.findChildViewById(rootView, id);
      if (btnRegister == null) {
        break missingId;
      }

      id = R.id.edt_password;
      EditText edtPassword = ViewBindings.findChildViewById(rootView, id);
      if (edtPassword == null) {
        break missingId;
      }

      id = R.id.edt_user_name;
      EditText edtUserName = ViewBindings.findChildViewById(rootView, id);
      if (edtUserName == null) {
        break missingId;
      }

      id = R.id.password_input;
      TextInputLayout passwordInput = ViewBindings.findChildViewById(rootView, id);
      if (passwordInput == null) {
        break missingId;
      }

      id = R.id.tv_forget_password;
      TextView tvForgetPassword = ViewBindings.findChildViewById(rootView, id);
      if (tvForgetPassword == null) {
        break missingId;
      }

      return new LoginScreenBinding((RelativeLayout) rootView, btnLogin, btnRegister, edtPassword,
          edtUserName, passwordInput, tvForgetPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
