// Generated by view binder compiler. Do not edit!
package com.malas.appsr.malasapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.malas.appsr.malasapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginDetailsOutletBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnOk;

  @NonNull
  public final TextView tvList;

  @NonNull
  public final TextView tvNote;

  @NonNull
  public final TextView tvPassword;

  @NonNull
  public final TextView tvPasswordDetail;

  @NonNull
  public final TextView tvUrl;

  @NonNull
  public final TextView tvUsername;

  @NonNull
  public final TextView tvUsernameDetail;

  private ActivityLoginDetailsOutletBinding(@NonNull LinearLayout rootView, @NonNull Button btnOk,
      @NonNull TextView tvList, @NonNull TextView tvNote, @NonNull TextView tvPassword,
      @NonNull TextView tvPasswordDetail, @NonNull TextView tvUrl, @NonNull TextView tvUsername,
      @NonNull TextView tvUsernameDetail) {
    this.rootView = rootView;
    this.btnOk = btnOk;
    this.tvList = tvList;
    this.tvNote = tvNote;
    this.tvPassword = tvPassword;
    this.tvPasswordDetail = tvPasswordDetail;
    this.tvUrl = tvUrl;
    this.tvUsername = tvUsername;
    this.tvUsernameDetail = tvUsernameDetail;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginDetailsOutletBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginDetailsOutletBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login_details_outlet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginDetailsOutletBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_ok;
      Button btnOk = ViewBindings.findChildViewById(rootView, id);
      if (btnOk == null) {
        break missingId;
      }

      id = R.id.tv_list;
      TextView tvList = ViewBindings.findChildViewById(rootView, id);
      if (tvList == null) {
        break missingId;
      }

      id = R.id.tv_note;
      TextView tvNote = ViewBindings.findChildViewById(rootView, id);
      if (tvNote == null) {
        break missingId;
      }

      id = R.id.tv_password;
      TextView tvPassword = ViewBindings.findChildViewById(rootView, id);
      if (tvPassword == null) {
        break missingId;
      }

      id = R.id.tv_password_detail;
      TextView tvPasswordDetail = ViewBindings.findChildViewById(rootView, id);
      if (tvPasswordDetail == null) {
        break missingId;
      }

      id = R.id.tv_url;
      TextView tvUrl = ViewBindings.findChildViewById(rootView, id);
      if (tvUrl == null) {
        break missingId;
      }

      id = R.id.tv_username;
      TextView tvUsername = ViewBindings.findChildViewById(rootView, id);
      if (tvUsername == null) {
        break missingId;
      }

      id = R.id.tv_username_detail;
      TextView tvUsernameDetail = ViewBindings.findChildViewById(rootView, id);
      if (tvUsernameDetail == null) {
        break missingId;
      }

      return new ActivityLoginDetailsOutletBinding((LinearLayout) rootView, btnOk, tvList, tvNote,
          tvPassword, tvPasswordDetail, tvUrl, tvUsername, tvUsernameDetail);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
