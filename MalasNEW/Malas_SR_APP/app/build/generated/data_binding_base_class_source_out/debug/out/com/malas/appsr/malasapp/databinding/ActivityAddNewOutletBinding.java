// Generated by view binder compiler. Do not edit!
package com.malas.appsr.malasapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.malas.appsr.malasapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddNewOutletBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnCancelOutlet;

  @NonNull
  public final Button btnSubmitOutlet;

  @NonNull
  public final EditText edtAddressOutlet;

  @NonNull
  public final EditText edtCity;

  @NonNull
  public final EditText edtContactNumberOutlet;

  @NonNull
  public final EditText edtContectPersonNameOutlet;

  @NonNull
  public final EditText edtCountry;

  @NonNull
  public final EditText edtDistrict;

  @NonNull
  public final EditText edtEmailOutlet;

  @NonNull
  public final EditText edtMobileOutlet;

  @NonNull
  public final EditText edtResidtialAddressOutlet;

  @NonNull
  public final EditText edtState;

  @NonNull
  public final EditText edtTerritory;

  @NonNull
  public final EditText edtUserName;

  @NonNull
  public final Spinner spinSlectSupplyChainOutlet;

  @NonNull
  public final Spinner spinTypeOfAppontmentOutlet;

  @NonNull
  public final TextView territoryName;

  @NonNull
  public final TextView tvCatagory;

  @NonNull
  public final TextView tvCatagoryHandler;

  private ActivityAddNewOutletBinding(@NonNull ScrollView rootView, @NonNull Button btnCancelOutlet,
      @NonNull Button btnSubmitOutlet, @NonNull EditText edtAddressOutlet,
      @NonNull EditText edtCity, @NonNull EditText edtContactNumberOutlet,
      @NonNull EditText edtContectPersonNameOutlet, @NonNull EditText edtCountry,
      @NonNull EditText edtDistrict, @NonNull EditText edtEmailOutlet,
      @NonNull EditText edtMobileOutlet, @NonNull EditText edtResidtialAddressOutlet,
      @NonNull EditText edtState, @NonNull EditText edtTerritory, @NonNull EditText edtUserName,
      @NonNull Spinner spinSlectSupplyChainOutlet, @NonNull Spinner spinTypeOfAppontmentOutlet,
      @NonNull TextView territoryName, @NonNull TextView tvCatagory,
      @NonNull TextView tvCatagoryHandler) {
    this.rootView = rootView;
    this.btnCancelOutlet = btnCancelOutlet;
    this.btnSubmitOutlet = btnSubmitOutlet;
    this.edtAddressOutlet = edtAddressOutlet;
    this.edtCity = edtCity;
    this.edtContactNumberOutlet = edtContactNumberOutlet;
    this.edtContectPersonNameOutlet = edtContectPersonNameOutlet;
    this.edtCountry = edtCountry;
    this.edtDistrict = edtDistrict;
    this.edtEmailOutlet = edtEmailOutlet;
    this.edtMobileOutlet = edtMobileOutlet;
    this.edtResidtialAddressOutlet = edtResidtialAddressOutlet;
    this.edtState = edtState;
    this.edtTerritory = edtTerritory;
    this.edtUserName = edtUserName;
    this.spinSlectSupplyChainOutlet = spinSlectSupplyChainOutlet;
    this.spinTypeOfAppontmentOutlet = spinTypeOfAppontmentOutlet;
    this.territoryName = territoryName;
    this.tvCatagory = tvCatagory;
    this.tvCatagoryHandler = tvCatagoryHandler;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddNewOutletBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddNewOutletBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_new_outlet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddNewOutletBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_cancel_outlet;
      Button btnCancelOutlet = ViewBindings.findChildViewById(rootView, id);
      if (btnCancelOutlet == null) {
        break missingId;
      }

      id = R.id.btn_submit_outlet;
      Button btnSubmitOutlet = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmitOutlet == null) {
        break missingId;
      }

      id = R.id.edt_address_outlet;
      EditText edtAddressOutlet = ViewBindings.findChildViewById(rootView, id);
      if (edtAddressOutlet == null) {
        break missingId;
      }

      id = R.id.edt_City;
      EditText edtCity = ViewBindings.findChildViewById(rootView, id);
      if (edtCity == null) {
        break missingId;
      }

      id = R.id.edt_contact_number_outlet;
      EditText edtContactNumberOutlet = ViewBindings.findChildViewById(rootView, id);
      if (edtContactNumberOutlet == null) {
        break missingId;
      }

      id = R.id.edt_contect_person_name_outlet;
      EditText edtContectPersonNameOutlet = ViewBindings.findChildViewById(rootView, id);
      if (edtContectPersonNameOutlet == null) {
        break missingId;
      }

      id = R.id.edt_country;
      EditText edtCountry = ViewBindings.findChildViewById(rootView, id);
      if (edtCountry == null) {
        break missingId;
      }

      id = R.id.edt_District;
      EditText edtDistrict = ViewBindings.findChildViewById(rootView, id);
      if (edtDistrict == null) {
        break missingId;
      }

      id = R.id.edt_email_outlet;
      EditText edtEmailOutlet = ViewBindings.findChildViewById(rootView, id);
      if (edtEmailOutlet == null) {
        break missingId;
      }

      id = R.id.edt_mobile_outlet;
      EditText edtMobileOutlet = ViewBindings.findChildViewById(rootView, id);
      if (edtMobileOutlet == null) {
        break missingId;
      }

      id = R.id.edt_residtial_address_outlet;
      EditText edtResidtialAddressOutlet = ViewBindings.findChildViewById(rootView, id);
      if (edtResidtialAddressOutlet == null) {
        break missingId;
      }

      id = R.id.edt_state;
      EditText edtState = ViewBindings.findChildViewById(rootView, id);
      if (edtState == null) {
        break missingId;
      }

      id = R.id.edt_territory;
      EditText edtTerritory = ViewBindings.findChildViewById(rootView, id);
      if (edtTerritory == null) {
        break missingId;
      }

      id = R.id.edt_user_name;
      EditText edtUserName = ViewBindings.findChildViewById(rootView, id);
      if (edtUserName == null) {
        break missingId;
      }

      id = R.id.spin_slect_supply_chain_outlet;
      Spinner spinSlectSupplyChainOutlet = ViewBindings.findChildViewById(rootView, id);
      if (spinSlectSupplyChainOutlet == null) {
        break missingId;
      }

      id = R.id.spin_type_of_appontment_outlet;
      Spinner spinTypeOfAppontmentOutlet = ViewBindings.findChildViewById(rootView, id);
      if (spinTypeOfAppontmentOutlet == null) {
        break missingId;
      }

      id = R.id.territory_name;
      TextView territoryName = ViewBindings.findChildViewById(rootView, id);
      if (territoryName == null) {
        break missingId;
      }

      id = R.id.tv_catagory;
      TextView tvCatagory = ViewBindings.findChildViewById(rootView, id);
      if (tvCatagory == null) {
        break missingId;
      }

      id = R.id.tvCatagoryHandler;
      TextView tvCatagoryHandler = ViewBindings.findChildViewById(rootView, id);
      if (tvCatagoryHandler == null) {
        break missingId;
      }

      return new ActivityAddNewOutletBinding((ScrollView) rootView, btnCancelOutlet,
          btnSubmitOutlet, edtAddressOutlet, edtCity, edtContactNumberOutlet,
          edtContectPersonNameOutlet, edtCountry, edtDistrict, edtEmailOutlet, edtMobileOutlet,
          edtResidtialAddressOutlet, edtState, edtTerritory, edtUserName,
          spinSlectSupplyChainOutlet, spinTypeOfAppontmentOutlet, territoryName, tvCatagory,
          tvCatagoryHandler);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
