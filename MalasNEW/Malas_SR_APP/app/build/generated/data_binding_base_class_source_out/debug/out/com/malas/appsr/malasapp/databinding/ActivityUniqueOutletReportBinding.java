// Generated by view binder compiler. Do not edit!
package com.malas.appsr.malasapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.malas.appsr.malasapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUniqueOutletReportBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout llLayout;

  @NonNull
  public final ListView lvUniqueOutlet;

  @NonNull
  public final RelativeLayout rl1;

  @NonNull
  public final EditText spnrCategory;

  @NonNull
  public final EditText spnrFromDate;

  @NonNull
  public final EditText spnrToDate;

  @NonNull
  public final TextView tvCount;

  @NonNull
  public final TextView tvEmptyList;

  @NonNull
  public final TextView tvOutletName;

  @NonNull
  public final TextView tvRouteName;

  @NonNull
  public final TextView tvTerritory;

  @NonNull
  public final TextView tvTotalVisitCount;

  private ActivityUniqueOutletReportBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout llLayout, @NonNull ListView lvUniqueOutlet, @NonNull RelativeLayout rl1,
      @NonNull EditText spnrCategory, @NonNull EditText spnrFromDate, @NonNull EditText spnrToDate,
      @NonNull TextView tvCount, @NonNull TextView tvEmptyList, @NonNull TextView tvOutletName,
      @NonNull TextView tvRouteName, @NonNull TextView tvTerritory,
      @NonNull TextView tvTotalVisitCount) {
    this.rootView = rootView;
    this.llLayout = llLayout;
    this.lvUniqueOutlet = lvUniqueOutlet;
    this.rl1 = rl1;
    this.spnrCategory = spnrCategory;
    this.spnrFromDate = spnrFromDate;
    this.spnrToDate = spnrToDate;
    this.tvCount = tvCount;
    this.tvEmptyList = tvEmptyList;
    this.tvOutletName = tvOutletName;
    this.tvRouteName = tvRouteName;
    this.tvTerritory = tvTerritory;
    this.tvTotalVisitCount = tvTotalVisitCount;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUniqueOutletReportBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUniqueOutletReportBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_unique_outlet_report, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUniqueOutletReportBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout llLayout = (LinearLayout) rootView;

      id = R.id.lvUniqueOutlet;
      ListView lvUniqueOutlet = ViewBindings.findChildViewById(rootView, id);
      if (lvUniqueOutlet == null) {
        break missingId;
      }

      id = R.id.rl1;
      RelativeLayout rl1 = ViewBindings.findChildViewById(rootView, id);
      if (rl1 == null) {
        break missingId;
      }

      id = R.id.spnr_category;
      EditText spnrCategory = ViewBindings.findChildViewById(rootView, id);
      if (spnrCategory == null) {
        break missingId;
      }

      id = R.id.spnr_fromDate;
      EditText spnrFromDate = ViewBindings.findChildViewById(rootView, id);
      if (spnrFromDate == null) {
        break missingId;
      }

      id = R.id.spnr_toDate;
      EditText spnrToDate = ViewBindings.findChildViewById(rootView, id);
      if (spnrToDate == null) {
        break missingId;
      }

      id = R.id.tvCount;
      TextView tvCount = ViewBindings.findChildViewById(rootView, id);
      if (tvCount == null) {
        break missingId;
      }

      id = R.id.tvEmptyList;
      TextView tvEmptyList = ViewBindings.findChildViewById(rootView, id);
      if (tvEmptyList == null) {
        break missingId;
      }

      id = R.id.tv_outlet_name;
      TextView tvOutletName = ViewBindings.findChildViewById(rootView, id);
      if (tvOutletName == null) {
        break missingId;
      }

      id = R.id.tv_route_name;
      TextView tvRouteName = ViewBindings.findChildViewById(rootView, id);
      if (tvRouteName == null) {
        break missingId;
      }

      id = R.id.tv_territory;
      TextView tvTerritory = ViewBindings.findChildViewById(rootView, id);
      if (tvTerritory == null) {
        break missingId;
      }

      id = R.id.tv_total_visit_count;
      TextView tvTotalVisitCount = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalVisitCount == null) {
        break missingId;
      }

      return new ActivityUniqueOutletReportBinding((LinearLayout) rootView, llLayout,
          lvUniqueOutlet, rl1, spnrCategory, spnrFromDate, spnrToDate, tvCount, tvEmptyList,
          tvOutletName, tvRouteName, tvTerritory, tvTotalVisitCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
