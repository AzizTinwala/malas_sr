// Generated by view binder compiler. Do not edit!
package com.malas.appsr.malasapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.malas.appsr.malasapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnCustomerDetails;

  @NonNull
  public final Button btnLoginDetails;

  @NonNull
  public final Button btnUpload;

  @NonNull
  public final LinearLayout llButton;

  private ActivityDetailsBinding(@NonNull RelativeLayout rootView,
      @NonNull Button btnCustomerDetails, @NonNull Button btnLoginDetails,
      @NonNull Button btnUpload, @NonNull LinearLayout llButton) {
    this.rootView = rootView;
    this.btnCustomerDetails = btnCustomerDetails;
    this.btnLoginDetails = btnLoginDetails;
    this.btnUpload = btnUpload;
    this.llButton = llButton;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_customer_details;
      Button btnCustomerDetails = ViewBindings.findChildViewById(rootView, id);
      if (btnCustomerDetails == null) {
        break missingId;
      }

      id = R.id.btn_login_details;
      Button btnLoginDetails = ViewBindings.findChildViewById(rootView, id);
      if (btnLoginDetails == null) {
        break missingId;
      }

      id = R.id.btn_upload;
      Button btnUpload = ViewBindings.findChildViewById(rootView, id);
      if (btnUpload == null) {
        break missingId;
      }

      id = R.id.ll_button;
      LinearLayout llButton = ViewBindings.findChildViewById(rootView, id);
      if (llButton == null) {
        break missingId;
      }

      return new ActivityDetailsBinding((RelativeLayout) rootView, btnCustomerDetails,
          btnLoginDetails, btnUpload, llButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
