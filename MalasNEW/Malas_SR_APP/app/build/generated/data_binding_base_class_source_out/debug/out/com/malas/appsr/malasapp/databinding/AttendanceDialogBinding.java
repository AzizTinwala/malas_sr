// Generated by view binder compiler. Do not edit!
package com.malas.appsr.malasapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.malas.appsr.malasapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AttendanceDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnFieldWork;

  @NonNull
  public final Button btnLeave;

  @NonNull
  public final Button btnOffDay;

  @NonNull
  public final Button btnOtherWork;

  @NonNull
  public final LinearLayout llLeave;

  @NonNull
  public final LinearLayout llWork;

  @NonNull
  public final LinearLayout tool;

  @NonNull
  public final TextView tvAttendanceDate;

  private AttendanceDialogBinding(@NonNull LinearLayout rootView, @NonNull Button btnFieldWork,
      @NonNull Button btnLeave, @NonNull Button btnOffDay, @NonNull Button btnOtherWork,
      @NonNull LinearLayout llLeave, @NonNull LinearLayout llWork, @NonNull LinearLayout tool,
      @NonNull TextView tvAttendanceDate) {
    this.rootView = rootView;
    this.btnFieldWork = btnFieldWork;
    this.btnLeave = btnLeave;
    this.btnOffDay = btnOffDay;
    this.btnOtherWork = btnOtherWork;
    this.llLeave = llLeave;
    this.llWork = llWork;
    this.tool = tool;
    this.tvAttendanceDate = tvAttendanceDate;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AttendanceDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AttendanceDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.attendance_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AttendanceDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_field_work;
      Button btnFieldWork = ViewBindings.findChildViewById(rootView, id);
      if (btnFieldWork == null) {
        break missingId;
      }

      id = R.id.btn_leave;
      Button btnLeave = ViewBindings.findChildViewById(rootView, id);
      if (btnLeave == null) {
        break missingId;
      }

      id = R.id.btn_off_day;
      Button btnOffDay = ViewBindings.findChildViewById(rootView, id);
      if (btnOffDay == null) {
        break missingId;
      }

      id = R.id.btn_other_work;
      Button btnOtherWork = ViewBindings.findChildViewById(rootView, id);
      if (btnOtherWork == null) {
        break missingId;
      }

      id = R.id.ll_leave;
      LinearLayout llLeave = ViewBindings.findChildViewById(rootView, id);
      if (llLeave == null) {
        break missingId;
      }

      id = R.id.ll_work;
      LinearLayout llWork = ViewBindings.findChildViewById(rootView, id);
      if (llWork == null) {
        break missingId;
      }

      id = R.id.tool;
      LinearLayout tool = ViewBindings.findChildViewById(rootView, id);
      if (tool == null) {
        break missingId;
      }

      id = R.id.tv_attendance_date;
      TextView tvAttendanceDate = ViewBindings.findChildViewById(rootView, id);
      if (tvAttendanceDate == null) {
        break missingId;
      }

      return new AttendanceDialogBinding((LinearLayout) rootView, btnFieldWork, btnLeave, btnOffDay,
          btnOtherWork, llLeave, llWork, tool, tvAttendanceDate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
