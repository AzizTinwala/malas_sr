// Generated by view binder compiler. Do not edit!
package com.malas.appsr.malasapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.malas.appsr.malasapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UniqueOutletReportLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView tvOutletName;

  @NonNull
  public final TextView tvRouteName;

  @NonNull
  public final TextView tvlvCount;

  private UniqueOutletReportLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull TextView tvOutletName, @NonNull TextView tvRouteName, @NonNull TextView tvlvCount) {
    this.rootView = rootView;
    this.tvOutletName = tvOutletName;
    this.tvRouteName = tvRouteName;
    this.tvlvCount = tvlvCount;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UniqueOutletReportLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UniqueOutletReportLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.unique_outlet_report_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UniqueOutletReportLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tvOutletName;
      TextView tvOutletName = ViewBindings.findChildViewById(rootView, id);
      if (tvOutletName == null) {
        break missingId;
      }

      id = R.id.tvRouteName;
      TextView tvRouteName = ViewBindings.findChildViewById(rootView, id);
      if (tvRouteName == null) {
        break missingId;
      }

      id = R.id.tvlvCount;
      TextView tvlvCount = ViewBindings.findChildViewById(rootView, id);
      if (tvlvCount == null) {
        break missingId;
      }

      return new UniqueOutletReportLayoutBinding((LinearLayout) rootView, tvOutletName, tvRouteName,
          tvlvCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
