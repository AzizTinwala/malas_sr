// Generated by view binder compiler. Do not edit!
package com.malas.appsr.malasapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.malas.appsr.malasapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListFragBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final FrameLayout flStatus;

  @NonNull
  public final LinearLayout llCompReq;

  @NonNull
  public final LinearLayout llLeaveRequ;

  @NonNull
  public final LinearLayout llRevertReq;

  @NonNull
  public final LinearLayout rl1;

  private ListFragBinding(@NonNull FrameLayout rootView, @NonNull FrameLayout flStatus,
      @NonNull LinearLayout llCompReq, @NonNull LinearLayout llLeaveRequ,
      @NonNull LinearLayout llRevertReq, @NonNull LinearLayout rl1) {
    this.rootView = rootView;
    this.flStatus = flStatus;
    this.llCompReq = llCompReq;
    this.llLeaveRequ = llLeaveRequ;
    this.llRevertReq = llRevertReq;
    this.rl1 = rl1;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListFragBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListFragBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_frag, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListFragBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      FrameLayout flStatus = (FrameLayout) rootView;

      id = R.id.ll_comp_req;
      LinearLayout llCompReq = ViewBindings.findChildViewById(rootView, id);
      if (llCompReq == null) {
        break missingId;
      }

      id = R.id.ll_leave_requ;
      LinearLayout llLeaveRequ = ViewBindings.findChildViewById(rootView, id);
      if (llLeaveRequ == null) {
        break missingId;
      }

      id = R.id.ll_revert_req;
      LinearLayout llRevertReq = ViewBindings.findChildViewById(rootView, id);
      if (llRevertReq == null) {
        break missingId;
      }

      id = R.id.rl1;
      LinearLayout rl1 = ViewBindings.findChildViewById(rootView, id);
      if (rl1 == null) {
        break missingId;
      }

      return new ListFragBinding((FrameLayout) rootView, flStatus, llCompReq, llLeaveRequ,
          llRevertReq, rl1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
