// Generated by view binder compiler. Do not edit!
package com.malas.appsr.malasapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.malas.appsr.malasapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomerFeedbackDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RatingBar rbPackaging;

  @NonNull
  public final RatingBar rbQty;

  @NonNull
  public final RatingBar rbTaste;

  @NonNull
  public final TextView tvPackaging;

  @NonNull
  public final TextView tvProductName;

  @NonNull
  public final TextView tvQtyRating;

  @NonNull
  public final TextView tvTaste;

  private CustomerFeedbackDetailsBinding(@NonNull LinearLayout rootView,
      @NonNull RatingBar rbPackaging, @NonNull RatingBar rbQty, @NonNull RatingBar rbTaste,
      @NonNull TextView tvPackaging, @NonNull TextView tvProductName, @NonNull TextView tvQtyRating,
      @NonNull TextView tvTaste) {
    this.rootView = rootView;
    this.rbPackaging = rbPackaging;
    this.rbQty = rbQty;
    this.rbTaste = rbTaste;
    this.tvPackaging = tvPackaging;
    this.tvProductName = tvProductName;
    this.tvQtyRating = tvQtyRating;
    this.tvTaste = tvTaste;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomerFeedbackDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomerFeedbackDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.customer_feedback_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomerFeedbackDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.rb_packaging;
      RatingBar rbPackaging = ViewBindings.findChildViewById(rootView, id);
      if (rbPackaging == null) {
        break missingId;
      }

      id = R.id.rb_qty;
      RatingBar rbQty = ViewBindings.findChildViewById(rootView, id);
      if (rbQty == null) {
        break missingId;
      }

      id = R.id.rb_taste;
      RatingBar rbTaste = ViewBindings.findChildViewById(rootView, id);
      if (rbTaste == null) {
        break missingId;
      }

      id = R.id.tv_packaging;
      TextView tvPackaging = ViewBindings.findChildViewById(rootView, id);
      if (tvPackaging == null) {
        break missingId;
      }

      id = R.id.tv_product_name;
      TextView tvProductName = ViewBindings.findChildViewById(rootView, id);
      if (tvProductName == null) {
        break missingId;
      }

      id = R.id.tv_qty_rating;
      TextView tvQtyRating = ViewBindings.findChildViewById(rootView, id);
      if (tvQtyRating == null) {
        break missingId;
      }

      id = R.id.tv_taste;
      TextView tvTaste = ViewBindings.findChildViewById(rootView, id);
      if (tvTaste == null) {
        break missingId;
      }

      return new CustomerFeedbackDetailsBinding((LinearLayout) rootView, rbPackaging, rbQty,
          rbTaste, tvPackaging, tvProductName, tvQtyRating, tvTaste);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
