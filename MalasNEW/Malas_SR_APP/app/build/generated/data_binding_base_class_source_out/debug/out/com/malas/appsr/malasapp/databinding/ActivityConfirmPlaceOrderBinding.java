// Generated by view binder compiler. Do not edit!
package com.malas.appsr.malasapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.malas.appsr.malasapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityConfirmPlaceOrderBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView SOQ;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final Button btnConfirm;

  @NonNull
  public final LinearLayout llConfirm;

  @NonNull
  public final LinearLayout llTotalConfirm;

  @NonNull
  public final LinearLayout lllReason;

  @NonNull
  public final ListView lvPlaceOrderConfirm;

  @NonNull
  public final TextView tvProductName;

  @NonNull
  public final TextView tvTextTotal;

  @NonNull
  public final TextView tvTotal;

  @NonNull
  public final View viewConfirm;

  @NonNull
  public final View viewConfirm1;

  private ActivityConfirmPlaceOrderBinding(@NonNull RelativeLayout rootView, @NonNull TextView SOQ,
      @NonNull Button btnCancel, @NonNull Button btnConfirm, @NonNull LinearLayout llConfirm,
      @NonNull LinearLayout llTotalConfirm, @NonNull LinearLayout lllReason,
      @NonNull ListView lvPlaceOrderConfirm, @NonNull TextView tvProductName,
      @NonNull TextView tvTextTotal, @NonNull TextView tvTotal, @NonNull View viewConfirm,
      @NonNull View viewConfirm1) {
    this.rootView = rootView;
    this.SOQ = SOQ;
    this.btnCancel = btnCancel;
    this.btnConfirm = btnConfirm;
    this.llConfirm = llConfirm;
    this.llTotalConfirm = llTotalConfirm;
    this.lllReason = lllReason;
    this.lvPlaceOrderConfirm = lvPlaceOrderConfirm;
    this.tvProductName = tvProductName;
    this.tvTextTotal = tvTextTotal;
    this.tvTotal = tvTotal;
    this.viewConfirm = viewConfirm;
    this.viewConfirm1 = viewConfirm1;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityConfirmPlaceOrderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityConfirmPlaceOrderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_confirm_place_order, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityConfirmPlaceOrderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.SOQ;
      TextView SOQ = ViewBindings.findChildViewById(rootView, id);
      if (SOQ == null) {
        break missingId;
      }

      id = R.id.btn_cancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btn_confirm;
      Button btnConfirm = ViewBindings.findChildViewById(rootView, id);
      if (btnConfirm == null) {
        break missingId;
      }

      id = R.id.ll_confirm;
      LinearLayout llConfirm = ViewBindings.findChildViewById(rootView, id);
      if (llConfirm == null) {
        break missingId;
      }

      id = R.id.ll_total_confirm;
      LinearLayout llTotalConfirm = ViewBindings.findChildViewById(rootView, id);
      if (llTotalConfirm == null) {
        break missingId;
      }

      id = R.id.lll_reason;
      LinearLayout lllReason = ViewBindings.findChildViewById(rootView, id);
      if (lllReason == null) {
        break missingId;
      }

      id = R.id.lv_place_order_confirm;
      ListView lvPlaceOrderConfirm = ViewBindings.findChildViewById(rootView, id);
      if (lvPlaceOrderConfirm == null) {
        break missingId;
      }

      id = R.id.tvProductName;
      TextView tvProductName = ViewBindings.findChildViewById(rootView, id);
      if (tvProductName == null) {
        break missingId;
      }

      id = R.id.tv_text_total;
      TextView tvTextTotal = ViewBindings.findChildViewById(rootView, id);
      if (tvTextTotal == null) {
        break missingId;
      }

      id = R.id.tv_total;
      TextView tvTotal = ViewBindings.findChildViewById(rootView, id);
      if (tvTotal == null) {
        break missingId;
      }

      id = R.id.view_confirm;
      View viewConfirm = ViewBindings.findChildViewById(rootView, id);
      if (viewConfirm == null) {
        break missingId;
      }

      id = R.id.view_confirm1;
      View viewConfirm1 = ViewBindings.findChildViewById(rootView, id);
      if (viewConfirm1 == null) {
        break missingId;
      }

      return new ActivityConfirmPlaceOrderBinding((RelativeLayout) rootView, SOQ, btnCancel,
          btnConfirm, llConfirm, llTotalConfirm, lllReason, lvPlaceOrderConfirm, tvProductName,
          tvTextTotal, tvTotal, viewConfirm, viewConfirm1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
