// Generated by view binder compiler. Do not edit!
package com.malas.appsr.malasapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.robotocalenderview.RobotoCalendarView;
import com.malas.appsr.malasapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHolidayCalendarBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView calendarAbsent;

  @NonNull
  public final TextView calendarHoliday;

  @NonNull
  public final TextView calendarLeave;

  @NonNull
  public final TextView calendarPresent;

  @NonNull
  public final TextView calendarWeekoff;

  @NonNull
  public final RobotoCalendarView holiday;

  @NonNull
  public final RecyclerView holidaySummary;

  @NonNull
  public final TextView noHoliday;

  private ActivityHolidayCalendarBinding(@NonNull LinearLayout rootView,
      @NonNull TextView calendarAbsent, @NonNull TextView calendarHoliday,
      @NonNull TextView calendarLeave, @NonNull TextView calendarPresent,
      @NonNull TextView calendarWeekoff, @NonNull RobotoCalendarView holiday,
      @NonNull RecyclerView holidaySummary, @NonNull TextView noHoliday) {
    this.rootView = rootView;
    this.calendarAbsent = calendarAbsent;
    this.calendarHoliday = calendarHoliday;
    this.calendarLeave = calendarLeave;
    this.calendarPresent = calendarPresent;
    this.calendarWeekoff = calendarWeekoff;
    this.holiday = holiday;
    this.holidaySummary = holidaySummary;
    this.noHoliday = noHoliday;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHolidayCalendarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHolidayCalendarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_holiday_calendar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHolidayCalendarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.calendar_absent;
      TextView calendarAbsent = ViewBindings.findChildViewById(rootView, id);
      if (calendarAbsent == null) {
        break missingId;
      }

      id = R.id.calendar_holiday;
      TextView calendarHoliday = ViewBindings.findChildViewById(rootView, id);
      if (calendarHoliday == null) {
        break missingId;
      }

      id = R.id.calendar_leave;
      TextView calendarLeave = ViewBindings.findChildViewById(rootView, id);
      if (calendarLeave == null) {
        break missingId;
      }

      id = R.id.calendar_present;
      TextView calendarPresent = ViewBindings.findChildViewById(rootView, id);
      if (calendarPresent == null) {
        break missingId;
      }

      id = R.id.calendar_weekoff;
      TextView calendarWeekoff = ViewBindings.findChildViewById(rootView, id);
      if (calendarWeekoff == null) {
        break missingId;
      }

      id = R.id.holiday;
      RobotoCalendarView holiday = ViewBindings.findChildViewById(rootView, id);
      if (holiday == null) {
        break missingId;
      }

      id = R.id.holiday_summary;
      RecyclerView holidaySummary = ViewBindings.findChildViewById(rootView, id);
      if (holidaySummary == null) {
        break missingId;
      }

      id = R.id.no_holiday;
      TextView noHoliday = ViewBindings.findChildViewById(rootView, id);
      if (noHoliday == null) {
        break missingId;
      }

      return new ActivityHolidayCalendarBinding((LinearLayout) rootView, calendarAbsent,
          calendarHoliday, calendarLeave, calendarPresent, calendarWeekoff, holiday, holidaySummary,
          noHoliday);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
